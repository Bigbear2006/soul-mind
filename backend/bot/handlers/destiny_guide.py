from aiogram import F, Router, flags
from aiogram.types import CallbackQuery, Message

from bot.keyboards.inline.base import get_to_registration_kb
from bot.keyboards.utils import one_button_keyboard
from bot.templates.destiny_guide import astro_events, important_days
from core.models import Client

# TODO: –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞, —á—Ç–æ –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç

router = Router()


@router.message(F.text == 'üó∫Ô∏è –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã')
@flags.with_client
async def destiny_guide_intro(msg: Message, client: Client):
    if not client.is_registered():
        await msg.answer(
            'üó∫Ô∏è –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã\n\n'
            '–ó–≤—ë–∑–¥—ã –∑–Ω–∞—é—Ç, –≥–¥–µ —Ç—ã.\n'
            '–ù–æ –ø–æ–∫–∞ —Ç—ã –Ω–µ –∑–∞—è–≤–∏–ª(–∞) –æ —Å–µ–±–µ ‚Äî —è –Ω–µ –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∏—Ö –º–∞—Ä—à—Ä—É—Ç.\n\n'
            '–ü—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî –∏ —è –¥–∞–º —Ç–µ–±–µ –∫–∞—Ä—Ç—É —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è.',
            reply_markup=get_to_registration_kb(
                text='üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø',
            ),
        )
    elif client.subscription_is_active():
        await msg.answer(
            'üó∫Ô∏è –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã\n\n'
            '–Ø –¥–µ—Ä–∂—É —Ä—É–∫—É –Ω–∞ –ø—É–ª—å—Å–µ –∫–æ—Å–º–æ—Å–∞ ‚Äî\n'
            '–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü —Å–æ–±–∏—Ä–∞—é –¥–ª—è —Ç–µ–±—è –∫–∞—Ä—Ç—É:\n'
            '–∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω–∞–±–ª—é–¥–∞—Ç—å, –∫–æ–≥–¥–∞ –±–µ—Ä–µ—á—å, –∞ –∫–æ–≥–¥–∞ —Å–∏—è—Ç—å.\n\n'
            '–ê—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è. –í–∞–∂–Ω—ã–µ –¥–Ω–∏. –õ–∏—á–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.',
            reply_markup=one_button_keyboard(
                text='üå† –°–º–æ—Ç—Ä–µ—Ç—å –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å',
                callback_data='destiny_guide',
            ),
        )
    elif client.has_trial():
        await msg.answer(
            'üó∫Ô∏è –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã\n\n'
            '–†–µ—Ç—Ä–æ–≥—Ä–∞–¥—ã, –∑–∞—Ç–º–µ–Ω–∏—è, –≤–∞–∂–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∏—Ç—ã ‚Äî\n'
            '—è —Å–æ–±—Ä–∞–ª–∞ –≤—Å—ë, —á—Ç–æ –¥–≤–∏–≥–∞–µ—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.\n'
            '–¢—ã –≤–∏–¥–∏—à—å –≥–ª–∞–≤–Ω–æ–µ. –û—Å—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å–∫—Ä–æ–µ—Ç—Å—è, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≥–ª—É–±–∂–µ.\n\n'
            '–•–æ—á–µ—à—å –∑–Ω–∞—Ç—å, —Å –∫–∞–∫–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π –≤—Ö–æ–¥–∏—Ç –º–µ—Å—è—Ü?',
            reply_markup=one_button_keyboard(
                text='üåå –û—Ç–∫—Ä—ã—Ç—å –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è',
                callback_data='destiny_guide',
            ),
        )
    else:
        await msg.answer(
            'üó∫Ô∏è –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å —Å—É–¥—å–±—ã\n\n'
            '–¢—ã –≤–∏–¥–∏—à—å –≥–ª–∞–≤–Ω–æ–µ ‚Äî\n'
            '—Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥—ã, –∑–∞—Ç–º–µ–Ω–∏—è, –∫–ª—é—á–µ–≤—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –Ω–µ–±–∞.\n'
            '–≠—Ç–æ–≥–æ —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –∏–¥—Ç–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.\n'
            '–ù–æ —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ‚Ä¶ –∫–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤(–∞).\n\n'
            'P.S. –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–∫—Ä–æ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –≤–∞–∂–Ω—ã–º –¥–Ω—è–º –≤ —Ç–≤–æ–∏—Ö —Å—Ñ–µ—Ä–∞—Ö.',
            reply_markup=one_button_keyboard(
                text='üåò –°–º–æ—Ç—Ä–µ—Ç—å –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è –º–µ—Å—è—Ü–∞',
                callback_data='destiny_guide',
            ),
        )


@router.callback_query(F.data == 'destiny_guide')
@flags.with_client
async def destiny_guide(query: CallbackQuery, client: Client):
    reply_markup = None
    if client.subscription_is_active():
        reply_markup = one_button_keyboard(
            text='üåò –°–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∂–Ω—ã–µ –¥–Ω–∏ –º–µ—Å—è—Ü–∞',
            callback_data='important_days',
        )
    await query.message.edit_text(
        # for prod: date.today().strftime('%m.%Y')
        astro_events.get('05.2025'),
        reply_markup=reply_markup,
    )


@router.callback_query(F.data == 'important_days')
async def important_days_handler(query: CallbackQuery):
    await query.message.edit_text(
        # for prod: date.today().strftime('%m.%Y')
        important_days.get('05.2025'),
        reply_markup=one_button_keyboard(
            text='üåò –°–º–æ—Ç—Ä–µ—Ç—å –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏—è –º–µ—Å—è—Ü–∞',
            callback_data='destiny_guide',
        ),
    )
