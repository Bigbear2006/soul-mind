from aiogram import F, Router
from aiogram.types import CallbackQuery, Message

from bot.keyboards.inline import (
    back_to_personal_analysis_kb,
    personal_analysis_kb,
    to_registration_kb,
    to_subscription_plans_kb,
)
from core.models import Client

router = Router()


@router.message(F.text == 'üìå –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–∞–∑–±–æ—Ä')
@router.callback_query(F.data == 'to_personal_analysis')
async def personal_analysis_handler(msg: Message | CallbackQuery):
    pk = msg.chat.id if isinstance(msg, Message) else msg.message.chat.id
    client = await Client.objects.aget(pk=pk)
    answer_func = (
        msg.answer if isinstance(msg, Message) else msg.message.edit_text
    )

    if not client.is_registered():
        await answer_func(
            '–¢—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Ç—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ ‚Äî '
            '–Ω–æ –µ—â—ë –¥–∞–∂–µ –Ω–µ —Å–¥–µ–ª–∞–ª –ø–µ—Ä–≤—ã–π —à–∞–≥?\n\n'
            '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è. –ë–µ–∑ —ç—Ç–æ–≥–æ —è –Ω–µ —Å–º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ '
            '—Å–∞–º—É—é –≤–∞–∂–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é ‚Äî —Ç–≤–æ—é.',
            reply_markup=to_registration_kb,
        )

    await answer_func(
        '–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–±–æ—Ä.\n'
        '–≠—Ç–æ –æ—Ç–∫—Ä–æ–≤–µ–Ω–∏–µ.\n'
        '–¢—ã ‚Äî –≥–æ—Ä–∞–∑–¥–æ –≥–ª—É–±–∂–µ, —á–µ–º –¥—É–º–∞–µ—à—å.\n'
        '–ü–æ–∑–≤–æ–ª—å —Å–µ–±–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å, –∫–µ–º —Ç—ã –±—ã–ª –¥–æ —Ç–æ–≥–æ, '
        '–∫–∞–∫ –º–∏—Ä —Å–∫–∞–∑–∞–ª —Ç–µ–±–µ, –∫–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å.',
        reply_markup=personal_analysis_kb,
    )


@router.callback_query(F.data == 'destiny_mystery')
async def destiny_mystery(query: CallbackQuery):
    client = await Client.objects.aget(pk=query.message.chat.id)

    if not client.is_registered():
        await query.message.edit_text(
            '–¢—ã —Ö–æ—á–µ—à—å —É—Å–ª—ã—à–∞—Ç—å, –∑–∞—á–µ–º —Ç—ã –∑–¥–µ—Å—å.\n'
            '–ù–æ –ø–æ–∫–∞ –º–æ–ª—á–∏—Ç –¥–∞–∂–µ —Ç–≤–æ—è –í—Å–µ–ª–µ–Ω–Ω–∞—è.\n\n'
            '–ü—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî –∏ —Ç–≤–æ–π –ø—É—Ç—å –Ω–∞—á–Ω—ë—Ç —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è.',
            reply_markup=to_registration_kb,
        )
    elif client.subscription_is_active() or client.has_trial():
        await query.message.edit_text(
            '–¢—ã –ø—Ä–∏—à—ë–ª(–ø—Ä–∏—à–ª–∞) –≤ —ç—Ç–æ—Ç –º–∏—Ä –Ω–µ –ø—Ä–æ—Å—Ç–æ –∂–∏—Ç—å.\n'
            '–¢—ã ‚Äî —á–∞—Å—Ç—å –∑–∞–º—ã—Å–ª–∞.\n'
            '–£ —Ç–µ–±—è –µ—Å—Ç—å —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ —Å—ã–≥—Ä–∞–µ—Ç –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π.\n'
            '–ü–æ—Ä–∞ –≤—Å–ø–æ–º–Ω–∏—Ç—å –µ—ë.\n\n'
            '–Ø –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, —Å —á–µ–≥–æ –≤—Å—ë –Ω–∞—á–∞–ª–æ—Å—å.',
            reply_markup=back_to_personal_analysis_kb,
        )
    else:
        await query.message.edit_text(
            '–¢—ã —É–∂–µ —É—Å–ª—ã—à–∞–ª(–∞) –∑–æ–≤.\n'
            '–ò —ç—Ç–æ –Ω–µ –æ—Ç–ø—É—Å—Ç–∏—Ç.\n\n'
            '–û—Ç–∫—Ä–æ–π –¥–æ—Å—Ç—É–ø ‚Äî –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ,\n'
            '–ø–æ—á–µ–º—É —Ç—ã –±–æ–ª—å—à–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è.',
            reply_markup=to_subscription_plans_kb,
        )


@router.callback_query(F.data == 'career_and_finance')
async def career_and_finance(query: CallbackQuery):
    client = await Client.objects.aget(pk=query.message.chat.id)

    if not client.is_registered():
        await query.message.edit_text(
            '–•–æ—á–µ—à—å –ø–æ–Ω—è—Ç—å, –≥–¥–µ —Ç–≤–æ–∏ –¥–µ–Ω—å–≥–∏ ‚Äî\n'
            '–Ω–æ —Å–∞–º(–∞) –µ—â—ë –Ω–µ –∑–Ω–∞–µ—à—å, –∫—Ç–æ —Ç—ã?\n\n'
            '–ü—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –í—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–µ–±—è.',
            reply_markup=to_registration_kb,
        )
    elif client.subscription_is_active() or client.has_trial():
        await query.message.edit_text(
            '–¢—ã –Ω–µ –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è.\n'
            '–¢—ã ‚Äî –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.\n'
            '–Ø –ø–æ–∫–∞–∂—É, –≥–¥–µ —Ç–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –¥–µ–Ω—å–≥–∏.\n\n'
            '–ì–æ—Ç–æ–≤(–∞) —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –º–æ–Ω–µ—Ç–∏–∑–∏—Ä—É–µ—Ç—Å—è —Ç–≤–æ—è —Å—É—Ç—å?',
            reply_markup=back_to_personal_analysis_kb,
        )
    else:
        await query.message.edit_text(
            '–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–Ω–∞–µ—Ç, –∫—É–¥–∞ –µ–π —Ç–µ—á—å.\n'
            '–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å –µ–π —ç—Ç–æ.\n\n'
            '–û—Ñ–æ—Ä–º–∏ –¥–æ—Å—Ç—É–ø ‚Äî –∏ —è –ø–æ–∫–∞–∂—É, –∫–∞–∫ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Ç–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª.',
            reply_markup=to_subscription_plans_kb,
        )


@router.callback_query(F.data == 'love_code')
async def love_code(query: CallbackQuery):
    client = await Client.objects.aget(pk=query.message.chat.id)

    if not client.is_registered():
        await query.message.edit_text(
            '–¢—ã —Ö–æ—á–µ—à—å –ª—é–±–≤–∏.\n'
            '–ù–æ –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ—à—å, –∫–∞–∫ –ª—é–±–∏—à—å —Å–∞–º(–∞).\n\n'
            '–ü—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî –∏ —è –ø–æ–∫–∞–∂—É —Ç–≤–æ–π —Å–ø–æ—Å–æ–± —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å.',
            reply_markup=to_registration_kb,
        )
    elif client.subscription_is_active() or client.has_trial():
        await query.message.edit_text(
            '–¢—ã –ª—é–±–∏—à—å –Ω–µ –∫–∞–∫ –≤—Å–µ.\n'
            '–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ. –°–∏–ª—å–Ω–æ. –ù–µ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º.\n'
            '–ü–æ—Ä–∞ –ø–æ–Ω—è—Ç—å, –Ω–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ –≥–æ–≤–æ—Ä–∏—Ç —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ.',
            reply_markup=back_to_personal_analysis_kb,
        )
    else:
        await query.message.edit_text(
            '–õ—é–±–æ–≤—å —É–∂–µ –ø–æ—Å—Ç—É—á–∞–ª–∞—Å—å.\n'
            '–¢—ã –ø—Ä–æ—Å—Ç–æ –µ—â—ë –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã–ª(–∞) –¥–≤–µ—Ä—å.\n\n'
            '–ü–æ–∑–≤–æ–ª—å —Å–µ–±–µ –≤–æ–π—Ç–∏ –≥–ª—É–±–∂–µ. –Ø —Ä—è–¥–æ–º.',
            reply_markup=to_subscription_plans_kb,
        )


@router.callback_query(F.data == 'superpower')
async def superpower(query: CallbackQuery):
    client = await Client.objects.aget(pk=query.message.chat.id)

    if not client.is_registered():
        await query.message.edit_text(
            '–°–∏–ª–∞ –µ—Å—Ç—å.\n'
            '–ù–æ —á—Ç–æ–±—ã —è –ø–æ–∫–∞–∑–∞–ª–∞ –µ—ë ‚Äî —Ç—ã –¥–æ–ª–∂–µ–Ω(–Ω–∞) –≤–∫–ª—é—á–∏—Ç—å—Å—è.\n\n'
            '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è ‚Äî –∏ —Ç—ã —É–∑–Ω–∞–µ—à—å, —á—Ç–æ –≤ —Ç–µ–±–µ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ç–µ–±—è.',
            reply_markup=to_registration_kb,
        )
    elif client.subscription_is_active() or client.has_trial():
        await query.message.edit_text(
            '–û–Ω–∞ –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ —Å —Ç–æ–±–æ–π.\n'
            '–¢—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑—ã–≤–∞–ª(–∞) –µ—ë "—Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç—å".\n'
            '–ù–æ —ç—Ç–æ ‚Äî —Ç–≤–æ—è —Å–∏–ª–∞.\n'
            '–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –µ—ë –≤—Å–ø–æ–º–Ω–∏—Ç—å.',
            reply_markup=back_to_personal_analysis_kb,
        )
    else:
        await query.message.edit_text(
            '–¢—ã —É–∂–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞), —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–∏–ª–∞.\n'
            '–¢–µ–ø–µ—Ä—å ‚Äî –ø–æ—Ä–∞ –µ–π –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è.\n\n'
            '–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –¥–æ—Å—Ç—É–ø. –¢–∞–º —Ç–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π —Ä–µ—Å—É—Ä—Å.',
            reply_markup=to_subscription_plans_kb,
        )


@router.callback_query(F.data == 'full_profile')
async def full_profile(query: CallbackQuery):
    client = await Client.objects.aget(pk=query.message.chat.id)

    if not client.is_registered():
        await query.message.edit_text(
            '–¢—ã —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å –≤—Å—ë,\n'
            '–Ω–æ –ø–æ–∫–∞ –¥–∞–∂–µ –Ω–µ –æ—Ç–∫—Ä—ã–ª(–∞) –¥–≤–µ—Ä—å.\n\n'
            '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è ‚Äî –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ —Ü–µ–ª–æ—Å—Ç–Ω—É—é –∫–∞—Ä—Ç–∏–Ω—É. '
            '–ë–µ–∑ –¥–æ–≥–∞–¥–æ–∫, –±–µ–∑ —Ö–∞–æ—Å–∞.',
            reply_markup=to_registration_kb,
        )
    elif client.subscription_is_active() or client.has_trial():
        await query.message.edit_text(
            '–í–æ—Ç –æ–Ω ‚Äî —Ç—ã. –¶–µ–ª–∏–∫–æ–º.\n'
            '–ë–µ–∑ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤, –±–µ–∑ –º–∞—Å–æ–∫, –±–µ–∑ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–µ–π.\n'
            '–Ø —Å–æ–±—Ä–∞–ª–∞ –≤—Å—ë, —á—Ç–æ–±—ã —Ç—ã —É–≤–∏–¥–µ–ª(–∞) —Å–≤–æ—é —Å–∏—Å—Ç–µ–º—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.\n\n'
            '–ü–æ—Ä–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Å–æ–±–æ–π ‚Äî –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É.',
            reply_markup=back_to_personal_analysis_kb,
        )
    else:
        await query.message.edit_text(
            '–¢—ã —É–∂–µ —É–≤–∏–¥–µ–ª(–∞) –Ω–∞—á–∞–ª–æ.\n'
            '–ò –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –≤–Ω—É—Ç—Ä–∏ —â—ë–ª–∫–Ω—É–ª–æ ‚Äî —ç—Ç–æ –Ω–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ.\n\n'
            '–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –¥–æ—Å—Ç—É–ø ‚Äî –∏ —Ç—ã —Å–æ–±–µ—Ä—ë—à—å —Å–≤–æ–π –ø–∞–∑–ª '
            '–¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞.',
            reply_markup=to_subscription_plans_kb,
        )
