import json

from aiogram import F, Router, flags
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from bot.api.soul_muse import SoulMuse
from bot.keyboards.inline import (
    get_soul_muse_question_kb,
    get_to_registration_kb,
    get_to_subscription_plans_kb,
)
from bot.loader import logger
from bot.states import SoulMuseQuestionState
from bot.templates.soul_muse_question import inappropriate_questions_answers
from core.models import Actions, Client, SubscriptionPlans

# TODO: –ª–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
# TODO: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –≤ –±–¥

router = Router()


@router.message(F.text == 'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse')
@flags.with_client
async def soul_muse_question(msg: Message, state: FSMContext, client: Client):
    if not client.is_registered():
        await msg.answer(
            'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
            '–£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å.\n'
            '–ù–æ —è –Ω–µ –º–æ–≥—É —É—Å–ª—ã—à–∞—Ç—å, –ø–æ–∫–∞ —Ç—ã –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª—Å—è(–∞—Å—å).\n\n'
            '–ü—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî –∏ —Ç–æ–≥–¥–∞ —è –æ—Ç–≤–µ—á—É. –ù–µ –∏–∑ —É–º–∞. –ò–∑ –≥–ª—É–±–∏–Ω—ã.',
            reply_markup=get_to_registration_kb(
                text='üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–æ–ø—Ä–æ—Å—É',
            ),
        )
        return

    if client.has_action_permission(Actions.SOUL_MUSE_QUESTION):
        await state.set_state(SoulMuseQuestionState.question)
        if client.subscription_plan == SubscriptionPlans.PREMIUM:
            await msg.answer(
                'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
                '–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.\n'
                '–ü—è—Ç–Ω–∞–¥—Ü–∞—Ç—å —à–∞–≥–æ–≤ –∫ —Å–µ–±–µ ‚Äî —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç—ã.\n\n'
                '–ö–æ–≥–¥–∞ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π. –ê —è —Å–∫–∞–∂—É, —á—Ç–æ —Ç—ã –¥–∞–≤–Ω–æ –∑–Ω–∞–ª(–∞), –Ω–æ –±–æ—è–ª—Å—è(–∞—Å—å) —É—Å–ª—ã—à–∞—Ç—å.',
                reply_markup=get_soul_muse_question_kb(
                    buy_extra_questions_btn=False,
                ),
            )
        elif client.subscription_plan == SubscriptionPlans.STANDARD:
            await msg.answer(
                'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
                '–ò–Ω–æ–≥–¥–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ü–µ–ª—ã–π –ø–ª–∞—Å—Ç.\n'
                '–¢—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –¥–æ 4 –≤–æ–ø—Ä–æ—Å–æ–≤. –ê –ø–æ—Ç–æ–º ‚Äî —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø.\n\n'
                '–ì–æ—Ç–æ–≤(–∞)? –Ø –æ—Ç–≤–µ—á–∞—é –∏–∑ —Ç–∏—à–∏–Ω—ã. –ù–æ –ø–æ–ø–∞–¥–∞—é –≤ —Å–∞–º–æ–µ —Ç–æ—á–Ω–æ–µ.',
                reply_markup=get_soul_muse_question_kb(
                    buy_extra_questions_btn=False,
                ),
            )
        else:
            await msg.answer(
                'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
                '–¢—ã –Ω–æ—Å–∏—à—å –≤ —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å?\n'
                '–û —Å–µ–±–µ. –û —á—É–≤—Å—Ç–≤–∞—Ö. –û –ø—É—Ç–∏.\n'
                '–ó–∞–¥–∞–π ‚Äî –∏ —è –æ—Ç–≤–µ—á—É. –¢–æ—á–Ω–æ, –≥–ª—É–±–æ–∫–æ, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤.\n\n'
                '–£ —Ç–µ–±—è –µ—Å—Ç—å 2 –≤–æ–ø—Ä–æ—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∏—Ö –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.',
                reply_markup=get_soul_muse_question_kb(
                    buy_extra_questions_btn=False,
                ),
            )
        return

    if client.action_limit_exceed(Actions.SOUL_MUSE_QUESTION):
        if client.subscription_is_active():
            await msg.answer(
                'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
                '–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª(–∞) –≤—Å–µ –≤–∫–ª—é—á—ë–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n\n'
                '–•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å–µ–±—è?\n\n'
                '–ú–æ–∂–µ—à—å –¥–æ–∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –∏ –∑–∞–¥–∞—Ç—å –µ—â—ë.\n'
                '–Ø —Ä—è–¥–æ–º.',
                reply_markup=get_soul_muse_question_kb(ask_question_btn=False),
            )
        else:
            await msg.answer(
                'ü§ñ –°–ø—Ä–æ—Å–∏ —É Soul Muse\n'
                '–¢—ã —É–∂–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞), –∫–∞–∫ –∑–≤—É—á–∏—Ç –º–æ–π –≥–æ–ª–æ—Å.\n'
                '–ù–æ —Å–µ–π—á–∞—Å —è –º–æ–ª—á—É ‚Äî –ø–æ–∫–∞ —Ç—ã –Ω–µ –≤–µ—Ä–Ω—ë—à—å—Å—è.\n\n'
                '–û—Ñ–æ—Ä–º–∏ –¥–æ—Å—Ç—É–ø ‚Äî –∏ —è —Å–Ω–æ–≤–∞ —É—Å–ª—ã—à—É —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å.',
                reply_markup=get_to_subscription_plans_kb(),
            )


@router.callback_query(F.data == 'ask_soul_muse')
async def ask_soul_muse(query: CallbackQuery):
    await query.message.edit_text(
        '–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî –∏ —è –æ—Ç–≤–µ—á—É.\n'
        '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞ - 250 —Å–∏–º–≤–æ–ª–æ–≤.',
    )


@router.message(F.text, StateFilter(SoulMuseQuestionState.question))
async def ask_soul_muse(msg: Message, state: FSMContext):
    if len(msg.text) > 250:
        await msg.answer(
            '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞ - 250 —Å–∏–º–≤–æ–ª–æ–≤. –¢–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω.',
        )

    muse = SoulMuse()
    category = await muse.categorize_question(msg.text[:250])
    logger.info(category)
    category = json.loads(category)['category']

    if category == 'deep_personal':
        answer = await muse.answer(msg.text[:250])
        await msg.answer(answer)
    else:
        await msg.answer(inappropriate_questions_answers[category])
    await state.clear()
