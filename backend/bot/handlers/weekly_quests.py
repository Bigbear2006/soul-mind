from aiogram import F, Router, flags
from aiogram.types import CallbackQuery, Message

from bot.keyboards.inline import get_to_registration_kb, get_weekly_quest_kb
from bot.keyboards.utils import keyboard_from_queryset, one_button_keyboard
from core.models import Client, ClientWeeklyQuest, WeeklyQuest

# TODO: –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –∏ —Ç–µ–≥–∏

router = Router()


@router.message(F.text == 'üß© –ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–æ—Å—Ç–∞')
@router.callback_query(F.data == 'to_weekly_quests_list')
@flags.with_client
async def weekly_quests_list(msg: Message | CallbackQuery, client: Client):
    if not client.is_registered():
        await msg.answer(
            'üß© –ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–æ—Å—Ç–∞\n\n'
            '–•–æ—á–µ—à—å —Ä–∞—Å—Ç–∏ ‚Äî –Ω–∞—á–Ω–∏ —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞.\n'
            '–ù–æ —á—Ç–æ–±—ã –¥–≤–∏–≥–∞—Ç—å—Å—è ‚Äî –Ω–∞–¥–æ –ø–æ—è–≤–∏—Ç—å—Å—è.\n\n'
            '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, –∏ —è –æ—Ç–∫—Ä–æ—é —Ç–µ–±–µ –ø–µ—Ä–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂.',
            reply_markup=get_to_registration_kb(),
        )
        return

    if client.has_trial():
        await msg.answer(
            'üß© –ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Ä–æ—Å—Ç–∞\n\n'
            '–Ø –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è –∫–æ—Ä–æ—Ç–∫–∏–π –ø—É—Ç—å –≤–Ω—É—Ç—Ä—å.\n'
            '3 –¥–Ω—è ‚Äî —á—Ç–æ–±—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ.\n'
            '–ë–µ–∑ –Ω–∞–ø—Ä—è–≥–∞. –ù–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º.\n\n'
            '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å ‚Äî –Ω–∞—á–Ω–∏ —Å–µ–π—á–∞—Å. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.',
            reply_markup=one_button_keyboard(
                text='‚ñ∂ –ù–∞—á–∞—Ç—å 3-–¥–Ω–µ–≤–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂',
                callback_data='start_trial_challenge',
            ),
        )
        return

    # TODO: –î–æ–¥–µ–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö –¥–ª—è —Ä–æ—Å—Ç–∞

    answer_func = (
        msg.answer if isinstance(msg, Message) else msg.message.edit_text
    )
    await answer_func(
        '–í—ã–±–µ—Ä–∏, –≤ –∫–∞–∫–æ–º —á–µ–ª–ª–µ–Ω–¥–∂–µ —Ç—ã —Ö–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å',
        reply_markup=await keyboard_from_queryset(
            WeeklyQuest,
            'weekly_quest',
        ),
    )


@router.callback_query(F.data.startswith('weekly_quest'))
async def weekly_quest_detail(query: CallbackQuery):
    quest = await WeeklyQuest.objects.aget(pk=query.data.split(':')[1])
    await query.message.edit_text(
        quest.title,
        reply_markup=await get_weekly_quest_kb(quest),
    )


@router.callback_query(F.data.startswith('participate_in_weekly_quest'))
@flags.with_client
async def participate_in_weekly_quest(query: CallbackQuery, client: Client):
    quest = await WeeklyQuest.objects.aget(pk=query.data.split(':')[1])
    await ClientWeeklyQuest.objects.acreate(client=client, quest=quest)
    await query.message.edit_text(
        f'–¢–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —á–µ–ª–ª–µ–Ω–¥–∂–µ "{quest.title}"!\n'
        f'–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.',
    )
