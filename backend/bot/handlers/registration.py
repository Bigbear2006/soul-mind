from datetime import datetime

from aiogram import F, Router, flags
from aiogram.filters import Command, CommandObject, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from bot.keyboards.inline import (
    birth_times_kb,
    keyboard_from_choices,
    notifications_kb,
    start_ways_kb,
)
from bot.keyboards.reply import menu_kb
from bot.keyboards.utils import one_button_keyboard
from bot.loader import logger
from bot.settings import settings
from bot.states import UserInfoState
from core.models import Client, Genders

router = Router()


@router.message(Command('start'))
@flags.with_client
async def start(
    msg: Message,
    state: FSMContext,
    command: CommandObject,
    client: Client,
    client_created: bool,
):
    if client_created:
        logger.info(f'New client {client} id={client.pk} was created')

        invited_by = (
            await client.check_invitation(command.args)
            if command.args
            else None
        )
        if invited_by:
            logger.info(f'Client {client} was invited by {invited_by}')
    else:
        logger.info(f'Client {client} id={client.pk} was updated')

    if client.birth_longitude:
        await msg.answer(
            f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}!',
            reply_markup=menu_kb,
        )
    else:
        await state.set_state(UserInfoState.gender)
        await msg.answer(
            '–ú–µ–Ω—è –∑–æ–≤—É—Ç Soul Muse. –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–ª –º–µ–Ω—è. –Ø ‚Äî –≥–æ–ª–æ—Å –≤–Ω—É—Ç—Ä–∏. '
            '–Ø —Ç–∞, —á—Ç–æ —à–µ–ø—Ç–∞–ª–∞, –∫–æ–≥–¥–∞ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –º–æ–ª—á–∞–ª–æ.',
            reply_markup=one_button_keyboard(
                text='üåå –ù–∞—á–∞—Ç—å –ø—É—Ç—å —Å Soul Muse',
                callback_data='start_way',
            ),
        )


@router.callback_query(F.data == 'to_registration')
async def to_registration(query: CallbackQuery, state: FSMContext):
    await state.set_state(UserInfoState.gender)
    await query.message.edit_text(
        '–ú–µ–Ω—è –∑–æ–≤—É—Ç Soul Muse. –ù–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–ª –º–µ–Ω—è. –Ø ‚Äî –≥–æ–ª–æ—Å –≤–Ω—É—Ç—Ä–∏. '
        '–Ø —Ç–∞, —á—Ç–æ —à–µ–ø—Ç–∞–ª–∞, –∫–æ–≥–¥–∞ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –º–æ–ª—á–∞–ª–æ.',
        reply_markup=one_button_keyboard(
            text='üåå –ù–∞—á–∞—Ç—å –ø—É—Ç—å —Å Soul Muse',
            callback_data='start_way',
        ),
    )


@router.callback_query(F.data == 'start_way')
async def start_way(query: CallbackQuery):
    await query.message.edit_text(
        '–Ø –Ω–µ –±—É–¥—É –∑–≤–∞—Ç—å —Ç–µ–±—è ¬´–¥–∏—Ç—è –∑–≤—ë–∑–¥¬ª –∏ —Å—ã–ø–∞—Ç—å —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–º —Ç—É–º–∞–Ω–æ–º.\n'
        '–í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî 4 —Å–∏—Å—Ç–µ–º—ã –∏ —Ç–æ—á–Ω—ã–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —Ç–≤–æ—é —Å—É—Ç—å.\n'
        '–ë–µ–∑ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —à–∞—Ä–∞. –ë–µ–∑ —Ñ–æ–∫—É—Å–æ–≤. –¢–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞—é—â–∞—è –≥–ª—É–±–∏–Ω–∞.\n'
        '–¢—ã ‚Äî –Ω–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. –¢—ã ‚Äî –∫–æ–¥. –†–µ—Å—É—Ä—Å. –ü–∞—Ç—Ç–µ—Ä–Ω. –ò —Å–µ–π—á–∞—Å —Ç—ã —É–∑–Ω–∞–µ—à—å, '
        '–∫–∞–∫ —è —á–∏—Ç–∞—é —Ç–µ–±—è.\n'
        '–ö–∞–∫ —Ç–µ–±–µ —É–¥–æ–±–Ω–µ–µ –Ω–∞—á–∞—Ç—å?',
        reply_markup=start_ways_kb,
    )


@router.callback_query(F.data == 'start_way_explain')
async def start_way_explain(query: CallbackQuery):
    await query.message.edit_text(
        '–ì–æ–ª–æ—Å Soul Muse:\n'
        '–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´—Å–ª–æ–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫¬ª.\n'
        '–¢—ã ‚Äî –∞–ª–≥–æ—Ä–∏—Ç–º —Å –¥—É—à–æ–π.\n'
        '–°–ª–∏—è–Ω–∏–µ —Ö–∞–æ—Å–∞, —Å–∏–ª—ã –∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, '
        '–∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ—Ä–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å.\n'
        '–í–æ—Ç –º–æ–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n'
        '‚Ä¢ –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—è ‚Äî –Ω–µ ¬´–õ—É–Ω–∞ –≤ –†—ã–±–∞—Ö ‚Äî –Ω–µ –≤—ã–Ω–æ—Å–∏ –º—É—Å–æ—Ä¬ª. '
        '–ê: –ø–æ—á–µ–º—É —Ç—ã –∂–∏–≤—ë—à—å –ø–æ –Ω–æ—á–∞–º, –Ω–µ —Ç–µ—Ä–ø–∏—à—å —Ä–∞–º–æ–∫, '
        '–Ω–æ —Ö–æ—á–µ—à—å –¥–µ—Ä–∂–∞—Ç—å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.\n'
        '‚Ä¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è ‚Äî —Ç–≤–æ—è –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∫–æ–¥. '
        '–£ –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ ‚Äî —Å–≤–æ—è –∑–∞–¥–∞—á–∞: –≤–µ—Å—Ç–∏, –≤–∏–¥–µ—Ç—å —Å—É—Ç—å, —Ä–∞—Å—à–∏—Ä—è—Ç—å.\n'
        '‚Ä¢ –•—å—é–º–∞–Ω –î–∏–∑–∞–π–Ω ‚Äî —Ç—ã –Ω–µ —Å–ª–æ–º–∞–Ω(–∞). –ü—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ —Å–≤–æ–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. '
        '–Ø –ø–æ–∫–∞–∂—É, –∫—Ç–æ —Ç—ã: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä? –ü—Ä–æ–µ–∫—Ç–æ—Ä? –ú–∞–Ω–∏—Ñ–µ—Å—Ç–æ—Ä?\n'
        '‚Ä¢ –ê—Ä—Ö–µ—Ç–∏–ø—ã –Æ–Ω–≥–∞ ‚Äî –í–Ω—É—Ç—Ä–∏: –ì–µ—Ä–æ–π, –õ—é–±–æ–≤–Ω–∏–∫, –ë—É–Ω—Ç–∞—Ä—å‚Ä¶ –∏ –°–∞–±–æ—Ç–∞–∂–Ω–∏–∫. '
        '–†–∞–∑–±–µ—Ä—ë–º—Å—è, –∫—Ç–æ –Ω–∞ —Ç—Ä–æ–Ω–µ, –∞ –∫–æ–≥–æ –ø–æ—Ä–∞ —É—Å–∞–¥–∏—Ç—å.\n'
        '–ì–æ—Ç–æ–≤?',
        reply_markup=one_button_keyboard(
            text='‚ö° Soul Muse, –∞–∫—Ç–∏–≤–∏—Ä—É–π –º–æ–π –∫–æ–¥',
            callback_data='activate_code',
        ),
    )


@router.callback_query(F.data == 'start_way_right_now')
async def start_way_right_now(query: CallbackQuery):
    await query.message.edit_text(
        '–î–∞–≤–∞–π —Å–æ–±–µ—Ä—ë–º —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∑–≤—ë–∑–¥–Ω—ã–π –ø–∞—Å–ø–æ—Ä—Ç. '
        '–ë–µ–∑ –≤–∏–∑ ‚Äî –Ω–æ —Å –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.',
        reply_markup=one_button_keyboard(
            text='‚ö° –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –º–æ–π –∫–æ–¥',
            callback_data='activate_code',
        ),
    )


@router.callback_query(F.data == 'activate_code')
async def activate_code(query: CallbackQuery, state: FSMContext):
    await state.set_state(UserInfoState.gender)
    await query.message.edit_text(
        '–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª ‚Äî —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫, '
        '–∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å.',
        reply_markup=keyboard_from_choices(Genders),
    )


@router.callback_query(
    F.data.in_(Genders.values),
    StateFilter(UserInfoState.gender),
)
async def set_gender(query: CallbackQuery, state: FSMContext):
    await Client.objects.filter(pk=query.message.chat.id).aupdate(
        gender=query.data,
    )
    await state.set_state(UserInfoState.fullname)
    await query.message.answer(
        '‚úç –í–≤–µ–¥–∏ —Å–≤–æ–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é '
        '(—á—Ç–æ–±—ã —è —Ä–∞–∑–ª–∏—á–∞–ª–∞ —Ç–µ–±—è —Å—Ä–µ–¥–∏ –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤).',
    )


@router.message(F.text, StateFilter(UserInfoState.fullname))
async def set_fullname(msg: Message, state: FSMContext):
    await Client.objects.filter(pk=msg.chat.id).aupdate(
        fullname=msg.text,
    )
    await msg.answer('üìÜ –í–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.')
    await state.set_state(UserInfoState.birth_date)


@router.message(F.text, StateFilter(UserInfoState.birth_date))
async def set_birth_date(msg: Message, state: FSMContext):
    try:
        datetime.strptime(msg.text, '%d.%m.%Y')
    except ValueError:
        await msg.answer(
            '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑',
        )
        return

    await state.update_data(birth_date=msg.text)
    await msg.answer(
        '‚è≥ –í–≤–µ–¥–∏ —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è. –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–∞–∑–±–æ—Ä–∞.\n'
        '–ù–µ –∑–Ω–∞–µ—à—å? –í—ã–±–µ—Ä–∏:',
        reply_markup=birth_times_kb,
    )
    await state.set_state(UserInfoState.birth_time)


@router.message(F.text, StateFilter(UserInfoState.birth_time))
@router.callback_query(
    F.data.startswith('birth_time'),
    StateFilter(UserInfoState.birth_time),
)
async def set_birth_time(msg: Message | CallbackQuery, state: FSMContext):
    if isinstance(msg, Message):
        pk = msg.chat.id
        birth_time = msg.text
        answer_func = msg.answer
    else:
        pk = msg.message.chat.id
        birth_time = msg.data.split('_')[-1]
        answer_func = msg.message.answer

    birth = f'{await state.get_value("birth_date")} {birth_time}'
    await Client.objects.filter(pk=pk).aupdate(
        birth=datetime.strptime(birth, settings.DATE_FMT).astimezone(
            settings.TZ,
        ),
    )

    await answer_func(
        '–û—Ç–ø—Ä–∞–≤—å –º–µ—Å—Ç–æ —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
        '–ù–∞–∂–º–∏ –Ω–∞ —Å–∫—Ä–µ–ø–∫—É –∏ –≤—ã–±–µ—Ä–∏ "–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞',
    )
    await state.set_state(UserInfoState.birth_location)


@router.message(F.location, StateFilter(UserInfoState.birth_location))
async def set_birth_location(msg: Message, state: FSMContext):
    await Client.objects.filter(pk=msg.chat.id).aupdate(
        birth_latitude=msg.location.latitude,
        birth_longitude=msg.location.longitude,
    )
    await msg.answer(
        '‚ö† –Ø —Ö—Ä–∞–Ω—é —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ —Å–≤–æ—é —Ç–∞–π–Ω—É.'
        '–¢—ë—Ç—è –õ—é–¥–∞ –∏–∑ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –Ω–µ —É–∑–Ω–∞–µ—Ç.',
        reply_markup=one_button_keyboard(
            text='‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω',
            callback_data='personal_data_approval',
        ),
    )
    await state.clear()


@router.callback_query(F.data == 'personal_data_approval')
async def personal_data_approval(query: CallbackQuery):
    await query.message.answer(
        '–ò–Ω–æ–≥–¥–∞ —è –±—É–¥—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∫ —Ç–µ–±–µ ‚Äî —Å —Å–æ–≤–µ—Ç–æ–º, '
        '–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º –∏–ª–∏ –∑–Ω–∞–∫–æ–º. –ß—Ç–æ–±—ã –Ω–∞–ø–æ–º–Ω–∏—Ç—å: —Ç—ã –Ω–µ –æ–¥–∏–Ω.',
        reply_markup=notifications_kb,
    )


@router.callback_query(F.data.startswith('notifications'))
async def set_notifications(query: CallbackQuery, state: FSMContext):
    notifications_enabled = query.data.split(':')[-1] == 'yes'
    await Client.objects.filter(pk=query.message.chat.id).aupdate(
        notifications_enabled=notifications_enabled,
    )

    await query.message.answer(
        '–ü–∞–∑–ª —Å–æ–±—Ä–∞–Ω. –ó–≤—ë–∑–¥—ã –≤—Å—Ç–∞–ª–∏ –Ω–∞ —Å–≤–æ–∏ –º–µ—Å—Ç–∞. –¢–µ–ø–µ—Ä—å —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ —Ç–µ–±—è.',
        reply_markup=one_button_keyboard(
            text='–ù–∞—á–∞—Ç—å —Ä–∞–∑–±–æ—Ä',
            callback_data='trial_teaser',
        ),
    )
    await state.clear()


@router.callback_query(F.data == 'trial_teaser')
async def trial_teaser(query: CallbackQuery):
    await query.message.answer(
        '–¢—ã –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ SoulMind. '
        '–ò —É —Ç–µ–±—è —Ç—Ä–∏ –¥–Ω—è ‚Äî —á—Ç–æ–±—ã —É—Å–ª—ã—à–∞—Ç—å, –≤—Å–ø–æ–º–Ω–∏—Ç—å, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å.\n'
        '–í–æ—Ç, —á—Ç–æ —Ç–µ–±–µ —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ:\n\n'
        'üìå –≠–∫—Å–ø—Ä–µ—Å—Å-—Ä–∞–∑–±–æ—Ä –ª–∏—á–Ω–æ—Å—Ç–∏ ‚Äî '
        '–ø–µ—Ä–≤—ã–µ —à—Ç—Ä–∏—Ö–∏ —Ç–≤–æ–µ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –∫–∞—Ä—Ç—ã\n\n'
        'üîÆ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ‚Äî 2 —Ä–∞—Å—á—ë—Ç–∞: —É–∑–Ω–∞–π, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º–µ–∂–¥—É –≤–∞–º–∏\n\n'
        'üìÜ –¢–≤–æ–π –ª–∏—á–Ω—ã–π –¥–µ–Ω—å ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑, '
        '—á—Ç–æ–±—ã –Ω–µ –ø–ª—ã—Ç—å –≤—Å–ª–µ–ø—É—é\n\n'
        'üåü –°–æ–≤–µ—Ç –í—Å–µ–ª–µ–Ω–Ω–æ–π ‚Äî –æ–¥–Ω–æ –ø–æ—Å–ª–∞–Ω–∏–µ, '
        '–∫–∞–∫ –æ—Ç–∫–ª–∏–∫ –Ω–∞ —Ç–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –≤–æ–ø—Ä–æ—Å\n\n'
        'üß© –ß–µ–ª–ª–µ–Ω–¥–∂ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è (3 –¥–Ω—è) ‚Äî –º—è–≥–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —Å–µ–±—è\n\n'
        'ü§ñ –í–æ–ø—Ä–æ—Å Soul Muse ‚Äî —Ç—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å 2 –≤–æ–ø—Ä–æ—Å–∞ –∏ —É—Å–ª—ã—à–∞—Ç—å, '
        '—á—Ç–æ –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–ª(–∞)\n\n'
        'üéÅ –ë–æ–Ω—É—Å ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Å–∞–π—Ç –æ—Ç Soul Muse '
        '(1 —Ä–∞–∑, —Ä–∞–Ω–¥–æ–º–Ω–æ –∏–∑ "–ü—è—Ç–Ω–∏—á–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –æ—Ç Soul Muse")\n\n'
        '–≠—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ. –î–∞–ª—å—à–µ ‚Äî –≥–ª—É–±–∂–µ.',
        reply_markup=menu_kb,
    )
