# Generated by Django 5.2 on 2025-04-27 15:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_client_channels_long_client_definition_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='dailyquest',
            name='text',
        ),
        migrations.AddField(
            model_name='dailyquest',
            name='description',
            field=models.TextField(default='', verbose_name='Описание'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='dailyquest',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активен'),
        ),
        migrations.AddField(
            model_name='dailyquest',
            name='title',
            field=models.CharField(default='', max_length=255, verbose_name='Название'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='weeklyquest',
            name='description',
            field=models.TextField(default='', verbose_name='Описание'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='weeklyquest',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активен'),
        ),
        migrations.AlterField(
            model_name='weeklyquest',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Название'),
        ),
        migrations.CreateModel(
            name='MonthText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('audio_file_id', models.TextField(blank=True, null=True, verbose_name='ID аудиофайла в телеграм')),
                ('type', models.CharField(max_length=100, verbose_name='Тип')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='core.client', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Тексты из "Месяц с Soul Muse"',
                'verbose_name_plural': 'Текст из "Месяц с Soul Muse"',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyQuestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='core.dailyquest')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_quests', to='core.questtag')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyQuestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='core.weeklyquest')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_quests', to='core.questtag')),
            ],
        ),
    ]
