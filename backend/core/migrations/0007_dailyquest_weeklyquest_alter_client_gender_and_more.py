# Generated by Django 5.2 on 2025-04-09 15:34

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_client_birth_client_birth_latitude_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Ежедневный квест',
                'verbose_name_plural': 'Ежедневные квесты',
            },
        ),
        migrations.CreateModel(
            name='WeeklyQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Еженедельный квест',
                'verbose_name_plural': 'Еженедельный квест',
            },
        ),
        migrations.AlterField(
            model_name='client',
            name='gender',
            field=models.CharField(blank=True, choices=[('male', 'Мужской'), ('female', 'Женский')], max_length=50, verbose_name='Пол'),
        ),
        migrations.CreateModel(
            name='WeeklyQuestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)], verbose_name='День')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.weeklyquest', verbose_name='Квест')),
            ],
            options={
                'verbose_name': 'Задача еженедельного квеста',
                'verbose_name_plural': 'Задачи еженедельных квестов',
                'unique_together': {('quest', 'day')},
            },
        ),
        migrations.CreateModel(
            name='ClientDailyQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('completed', 'Выполнен'), ('skipped', 'Пропущен')], max_length=50, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата прохождения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_quests', to='core.client', verbose_name='Пользователь')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='core.dailyquest', verbose_name='Квест')),
            ],
            options={
                'verbose_name': 'Результат ежедневного квеста',
                'verbose_name_plural': 'Результаты ежедневных квестов',
                'ordering': ['-created_at'],
                'unique_together': {('client', 'quest')},
            },
        ),
        migrations.CreateModel(
            name='ClientWeeklyQuestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('completed', 'Выполнен'), ('skipped', 'Пропущен')], max_length=50, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата прохождения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_quests', to='core.client', verbose_name='Пользователь')),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='core.weeklyquesttask', verbose_name='Квест')),
            ],
            options={
                'verbose_name': 'Результат еженедельного квеста',
                'verbose_name_plural': 'Результаты еженедельных квестов',
                'ordering': ['-created_at'],
                'unique_together': {('client', 'quest')},
            },
        ),
    ]
